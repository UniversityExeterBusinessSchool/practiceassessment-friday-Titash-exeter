#######################################################################################################################################################
# 
# Name:Titash Banerjee
# SID:750002643
# Exam Date:28/03/2025
# Module:BEMM458
# Github link for this assignment:https://github.com/UniversityExeterBusinessSchool/practiceassessment-friday-Titash-exeter  
#
# ######################################################################################################################################################
# Instruction 1. Read the questions and instructions carefully and complete scripts.

# Instruction 2. Only ethical and minimal use of AI is allowed. You might use AI to give advice on how to use a tool or programming language.  
#                You must not use AI to create the code. You might make use of AI to aid debugging of the code.  
#                You must indicate clearly how and where you have used AI.

# Instruction 3. Copy the output of the code and insert it as a comment below your code e.g # OUTPUT (23,45)

# Instruction 4. Ensure you provide comments for the code and the output to show contextual understanding.

# Instruction 5. Upon completing this test, commit to Git, copy and paste your code into the word file and upload the saved file to ELE.
#                There is a leeway on when you need to upload to ELE, however, you must commit to Git at 
#                the end of your session.

# ######################################################################################################################################################
# Question 1 - Data Processing and Loops
# You are given a string representing customer reviews. Use a for loop to process the text and count occurrences of specific keywords.
# Your allocated keywords are determined by the first and last digit of your SID.
# Count and store occurrences of each keyword in a dictionary called keyword_counts.
 
customer_reviews = """The product is well-designed and user-friendly. However, I experienced some issues with durability. The customer service was helpful, 
but I expected a faster response. The quality of the materials used is excellent. Overall, the purchase was satisfactory."""

# Keywords dictionary
keywords = {
    0: 'user-friendly',
    1: 'helpful',
    2: 'durability',
    3: 'response',
    4: 'satisfactory',
    5: 'quality',
    6: 'service',
    7: 'issues',
    8: 'purchase',
    9: 'materials'
}

my_keywords = [keywords[7], keywords[3]] 

# Initialize dictionary to store keyword occurrences
keyword_counts = {}

# Count occurrences of each selected keyword
for keyword in my_keywords:
    keyword_counts[keyword] = my_keywords.count(keyword.lower())
print(keyword_counts)

#OUTPUT {'issues': 1, 'response': 1}
##########################################################################################################################################################

# Question 2 - Business Metrics
# Scenario - You work in an online retail company as a business analyst. Your manager wants weekly reports on financial performance, including:
# Gross Profit Margin, Inventory Turnover, Customer Retention Rate (CRR), and Break-even Analysis. Implement Python functions 
# that take relevant values as inputs and return the computed metric. Use the first two and last two digits of your ID number as input values.

# Insert first two digits of ID number here:75
# Insert last two digits of ID number here:43

# Write your function for Gross Profit Margin
def gpm(rev,cogs): #defining function
    return (rev-cogs/rev)*100
# Write your function for Inventory Turnover
def it(cogs,avg_inv): #defining function
    return(cogs/avg_inv)
# Write your function for Customer Retention Rate (CRR)
def crr(cep,nc,csp): #defining function
    return(cep-nc/csp)*100
# Write your function for Break-even Analysis
def bea(fc,sp,vc): #defining function
    return(fc/sp-vc)
# Call your functions here
print('The gross profit margin is:',gpm(750,430)) #Calling the function
print('The Inventory Turnover is:',it(750,430)) #Calling the function
print('The customer retention rate is:',crr(750,430,4300)) #Calling the function
print('The break-even analysis is:',bea(750,430,4300)) #Calling the function

# OUTPUT 
# The gross profit margin is: 74942.66666666666
# The Inventory Turnover is: 1.744186046511628
# The customer retention rate is: 74990.0
# The break-even analysis is: -4298.2558139534885
##########################################################################################################################################################

# Question 3 - Forecasting and Regression
# A logistics company has gathered data on delivery costs and shipment volumes. The table below provides different costs and their corresponding shipment volumes.
# Develop a linear regression model and determine:
# 1. The optimal delivery cost that maximizes profit
# 2. The expected shipment volume when the cost is set at £68

"""
Delivery Cost (£)    Shipment Volume (Units)
-------------------------------------------
25                  500
30                  480
35                  450
40                  420
45                  400
50                  370
55                  340
60                  310
65                  290
70                  250
"""

# Write your regression model code here
import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
Delivery_cost=np.array([25,30,35,40,45,50,55,60,65,70]).reshape(-1,1)
Shipment_volume=np.array([500,480,450,420,400,370,340,310,290,250])
model=LinearRegression()
model.fit(Delivery_cost,Shipment_volume)
pred_dem=model.predict([[68]])
cost_range = np.arange(25, 71, 1).reshape(-1, 1)
predict_volumes = model.predict(cost_range)
opt_cost_index = np.argmax(predict_volumes)
optimal_cost = cost_range[opt_cost_index][0]
print(f"Expected shipment volume when delivery cost is £68: {pred_dem} units")
print(f"Optimal delivery cost that maximizes profit: £{optimal_cost}")
plt.scatter(Delivery_cost,Shipment_volume,color='b')
plt.plot(cost_range, predict_volumes, color='red', linestyle="dashed", label="Regression Line")
plt.plot(Delivery_cost,model.predict(Delivery_cost),'r')
plt.scatter(68,pred_dem,color='g')
plt.xlabel('Delivery_cost')
plt.ylabel('Shipment_volume')
plt.title('Delivery_cost VS Shipment_volume')
plt.show()

#OUTPUT
#Expected shipment volume when delivery cost is £68: [267.93939394] units
# Optimal delivery cost that maximizes profit: £25

##########################################################################################################################################################

# Question 4 - Debugging and Data Visualization

import rand as random
import matplotlib.pyplt as plt

# Generate 100 random numbers between 1 and student ID number
your_ID=input("Enter your Student ID: ")
max_value = int(your_ID)
random_numbers = [random.randint(your_ID, max_valu) in range(100)]

# Plotting the numbers in a histogram
plt.histogram(random_number, bin=10, edgecolour='blue', alpha=0.7, colour='red')
plt.title="Histogram of 100 Random Numbers"
plt.xlabel="Value Range"
plt.ylabel="Frequency"
plt.grid("True")
plt.show("plot")

#Corrected Code
import random  #corrected the splling of rand to random
import matplotlib.pyplot as plt  #corrected the splling of pyplt to pyplot

# Generate 100 random numbers between 1 and student ID number
your_ID = input("Enter your Student ID: ") 
max_value = int(your_ID)

random_numbers = [random.randint(1, max_value) for _ in range(100)]  #corrected the spelling of max_valu to max_value

# Plotting the numbers in a histogram
plt.hist(random_numbers, bins=10, edgecolor='blue', color='red', alpha=0.7)  #changed histogram to hist as to plot histogram hist is required
plt.title("Histogram of 100 Random Numbers")  # called the title properly and removing equals too
plt.xlabel("Value Range")  # called the xlabel properly and removing equals too
plt.ylabel("Frequency")  # called the ylabel properly and removing equals too
plt.grid(True)  #removing inverted commas as i am calling true
plt.show()  #removed plot as not needed
